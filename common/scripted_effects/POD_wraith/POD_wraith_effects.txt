
POD_become_wraith_effect = {
	save_temporary_scope_value_as = {
		name = saved_immortal_age
		value = POD_visual_age
	}
	POD_save_energy_level_before_splat_change = yes
	hidden_effect = { POD_remove_splat_traits_effect = yes }
	add_trait = wraith
	if = {
		limit = { exists = scope:saved_immortal_age }
		hidden_effect = { set_immortal_age = scope:saved_immortal_age }
	}
	hidden_effect = {
		POD_remove_wrong_supernatural_traits_on_existing_character = yes
		POD_remove_supernatural_relation_effect = yes
		POD_end_pregnancy = yes
		POD_remove_physical_coping_strategies = yes
		POD_side_effects_from_changing_splats = yes
	}

	if = {
		limit = {
			scope:necromancer ?= {
				OR = {
					has_perk = ns_daemonic_possession_perk
					has_perk = ebon_binding_perk
				}
			}
		}
		set_character_faith = faith:drop_outs
		POD_arcanoi_initiation_effect = yes
	}
	else_if = {
		limit = { exists = scope:necromancer }
		set_character_faith = faith:drop_outs
		POD_arcanoi_initiation_effect = yes
	}
	else = {
		add_character_modifier = caul_modifier
		trigger_event = {
			id = POD_wraith_maintenance.20
		}
	}
	POD_wraith_initialization_effect = yes
	# POD_arcanoi_initiation_effect = yes
	if = {
		limit = { is_ai = no }
		trigger_event = podintroductions.2302
	}
}

POD_become_spectre_effect = {
	if = { limit = { has_trait = risen } POD_lose_risen_effect = yes }
	remove_trait = shadow
	remove_trait = ferryman

	POD_save_energy_level_before_splat_change = yes
	add_trait_force_tooltip = spectre
	add_trait_xp = {
		trait = wraith
		track = fetter_resolved
		value = -100
	}
	POD_depose_effect = yes
	hidden_effect = {
		POD_remove_wrong_supernatural_traits_on_existing_character = yes
		POD_remove_all_perks_in_lifestyle = {
			LIFESTYLE = thorn_lifestyle
		}
		save_temporary_scope_as = spectre
		every_relation = {
			type = separated_shadow_servant
			limit = { is_alive = yes }
			death = {
				death_reason = death_disappearance
			}
		}
		every_in_list = {
			variable = owned_fetter_list
			var:object = {
				POD_destroy_fetter = yes
			}
		}
	}
	POD_wraith_initialization_effect = yes
}

POD_wraith_initialization_effect = {
	POD_change_government_if_landed = { GOVERNMENT = dark_kingdom_government }
	if = {
		limit = {
			NOT = { religion = { is_in_family = rf_wraiths } }
			is_a_cultist = no
		}
		POD_character_wraith_faith_initiation_effect = yes
	}
	POD_initialize_energy_modifier = yes
	if = {
		limit = {
			NOT = { has_character_flag = immune_to_disease }
		}
		POD_remove_disease_traits_effect = yes
		POD_remove_supernatural_disease_traits_effect = yes
		add_character_flag = immune_to_disease
	}
	if = {
		limit = {
			NOT = { has_trait = risen }
			NOT = { has_character_modifier = caul_modifier }
			NOT = { has_variable = spirit_location }
		}
		POD_send_to_dark_kingdom_effect = yes
	}
	POD_generate_dark_passion = yes
	trigger_event = POD_wraith_maintenance.1
}

POD_character_wraith_faith_initiation_effect = {
	if = {
		limit = {
			has_trait = spectre
		}
		religion:spectre_religion = {
			random_faith = {
				save_scope_as = this_faith
			}
		}
		set_character_faith = scope:this_faith
	}
	else_if = {
		limit = {
			has_trait = ferryman
		}
		set_character_faith = faith:ferrymen
	}
	else_if = {
		limit = {
			OR = {
				has_trait = risen
			}
		}
		set_character_faith = faith:drop_outs
	}
	else = {
		random_list = {
			100 = {
				trigger = {
					AND = {
						exists = scope:death_reason
						POD_is_death_by_old_age = { DEATH_REASON = scope:death_reason }
					}
				}
				set_character_faith = faith:iron_legion
			}
			100 = {
				trigger = {
					AND = {
						exists = scope:death_reason
						POD_is_death_by_disease = { DEATH_REASON = scope:death_reason }
					}
				}
				set_character_faith = faith:skeletal_legion
			}
			100 = {
				trigger = {
					OR = {
						has_variable = my_killer
						AND = {
							exists = scope:death_reason
							POD_is_death_by_murder = { DEATH_REASON = scope:death_reason }
						}
					}
				}
				set_character_faith = faith:grim_legion
			}
			100 = {
				trigger = {
					OR = {
						has_trait = lunatic
						AND = {
							exists = scope:death_reason
							POD_is_death_by_stress = { DEATH_REASON = scope:death_reason }
						}
					}
				}
				set_character_faith = faith:penitent_legion
			}
			100 = {
				trigger = {
					AND = {
						exists = scope:death_reason
						POD_is_death_by_accident = { DEATH_REASON = scope:death_reason }
					}
				}
				set_character_faith = faith:emerald_legion
			}
			100 = {
				trigger = {
					OR = {
						has_trait = depressed
						AND = {
							exists = scope:death_reason
							POD_is_death_by_suicide = { DEATH_REASON = scope:death_reason }
						}
					}
				}
				set_character_faith = faith:silent_legion
			}
			1 = {
				random_list = {
					100 = { set_character_faith = faith:legion_of_paupers } # death_mysterious
					1 = { set_character_faith = faith:legion_of_fate }
				}
			}
		}
	}
}

POD_send_to_dark_kingdom_effect = {
	POD_release_effect = yes
	if = {
		limit = {
			is_ai = yes
			exists = location
		}
		if = {
			limit = {
				location = {
					OR = {
						geographical_region = world_europe
						geographical_region = world_asia_minor
					}
				}
			}
			POD_umbra_send_effect = { LOCATION = flag:dark_kingdom_of_iron }
		}
		if = {
			limit = {
				location = {
					OR = {
						geographical_region = world_middle_east
						geographical_region = world_middle_east_persia
					}
				}
			}
			POD_umbra_send_effect = { LOCATION = flag:mantaqat_khayal }
		}
		if = {
			limit = {
				location = {
					geographical_region = world_africa
				}
			}
			POD_umbra_send_effect = { LOCATION = flag:dark_kingdom_of_ivory }
		}
		if = {
			limit = {
				location = {
					OR = {
						geographical_region = world_tibet
						geographical_region = world_steppe
					}
				}
			}
			POD_umbra_send_effect = { LOCATION = flag:dark_kingdom_of_jade }
		}
		if = {
			limit = {
				location = {
					geographical_region = world_india
				}
			}
			POD_umbra_send_effect = { LOCATION = flag:swar }
		}
		if = {
			limit = {
				location = {
					geographical_region = world_burma
				}
			}
			POD_umbra_send_effect = { LOCATION = flag:night_markets }
		}
	}
	else = {
		POD_umbra_send_effect = { LOCATION = flag:shadowlands }
	}
}

################## PATHOS ##################

POD_set_pathos_to_effect = {
	hidden_effect = { POD_remove_pathos_modifiers_effect = yes }
	save_scope_value_as = {
		name = calc
		value = {
			value = $PATHOS$
			floor = yes
			min = 0
			max = 5 # corresponds to maximum_pathos script_value
		}
	}
	switch = {
		trigger = scope:calc
		0 = { add_character_modifier = pathos0_modifier }
		1 = { add_character_modifier = pathos1_modifier }
		2 = { add_character_modifier = pathos2_modifier }
		3 = { add_character_modifier = pathos3_modifier }
		4 = { add_character_modifier = pathos4_modifier }
		5 = { add_character_modifier = pathos5_modifier }
	}
}

POD_set_angst_to_effect = {
	hidden_effect = { POD_remove_angst_modifiers_effect = yes }
	save_scope_value_as = {
		name = calc
		value = {
			value = $ANGST$
			floor = yes
			min = 0
			max = 5 # corresponds to maximum_angst script_value
		}
	}
	switch = {
		trigger = scope:calc
		0 = { add_character_modifier = angst0_modifier }
		1 = { add_character_modifier = angst1_modifier }
		2 = { add_character_modifier = angst2_modifier }
		3 = { add_character_modifier = angst3_modifier }
		4 = { add_character_modifier = angst4_modifier }
		5 = { add_character_modifier = angst5_modifier }
	}
}

POD_pathos_change_effect = {
	if = {
		limit = { NOT = { $COUNT$ = 0 } }
		custom_description = {
			text = POD_pathos_change_desc
			value = $COUNT$
			subject = this
		}
		save_scope_value_as = {
			name = pathos_calc
			value = {
				value = pathos_level
				add = $COUNT$
			}
		}
		POD_set_pathos_to_effect = { PATHOS = scope:pathos_calc }
	}
}

POD_angst_change_effect = {
	if = {
		limit = { NOT = { $COUNT$ = 0 } }
		custom_description = {
			text = POD_angst_change_desc
			value = $COUNT$
			subject = this
		}
		save_scope_value_as = {
			name = angst_calc
			value = {
				value = angst_level
				add = $COUNT$
			}
		}
		POD_set_angst_to_effect = { ANGST = scope:angst_calc }
	}
}

POD_pathos_increase_effect = {
	POD_pathos_change_effect = { COUNT = $COUNT$ }
}

POD_pathos_decrease_effect = {
	save_scope_value_as = {
		name = pathos_cost
		value = {
			value = 0
			subtract = $COUNT$
		}
	}
	POD_pathos_change_effect = { COUNT = scope:pathos_cost }
}

POD_angst_increase_effect = {
	POD_angst_change_effect = { COUNT = $COUNT$ }
}

POD_angst_decrease_effect = {
	save_scope_value_as = {
		name = angst_cost
		value = {
			value = 0
			subtract = $COUNT$
		}
	}
	POD_angst_change_effect = { COUNT = scope:angst_cost }
}

# angst cost handled by splat-agnostic energy effects
POD_pathos_cost_effect = {
	POD_energy_cost = {
		COUNT = $COUNT$
		SPLAT_MAXIMUM_ENERGY = maximum_pathos
	}
}

# angst cost handled by splat-agnostic energy effects
POD_pathos_income_effect = {
	POD_energy_income = {
		COUNT = $COUNT$
		SPLAT_MAXIMUM_ENERGY = maximum_pathos
	}
}

################## DARK PASSIONS ##################

POD_generate_dark_passion = {
	clear_variable_list = owned_dark_passion_list
	if = { limit = { has_perk = devils_dare_perk }
		random_list = {
			pick = 3
			unique = yes
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_war } }
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_kill } }
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_steal } }
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_cruelity } }
		}
	}
	else = {
		random_list = {
			pick = 2
			unique = yes
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_war } }
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_kill } }
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_steal } }
			1 = { add_to_variable_list = { name = owned_dark_passion_list target = flag:dark_passion_cruelity } }
		}
	}
	if = { limit = { has_perk = cooling_the_blood_perk }
		random_in_list = {
			variable = owned_dark_passion_list
			PREV = { remove_list_variable = { name = owned_dark_passion_list target = PREV } }
		}
	}
}

POD_pulse_dark_passion = {
	if = { limit = { POD_has_dark_passion = { TYPE = $TYPE$ } is_ai = no }
		save_scope_value_as = { name = dark_passion_flag value = flag:$TYPE$ }
		send_interface_toast = {
			title = POD_dark_passion_fulfilled
			left_icon = ROOT

			POD_pathos_cost_effect = { COUNT = 2 }
			POD_static_stress_gain = { COUNT = 100 }
			custom_tooltip = POD_dark_passion_lose
		}
		remove_list_variable = { name = owned_dark_passion_list target = flag:$TYPE$ }
	}
}

################## SHADOW ##################

POD_assign_random_thorn_perk = {
	custom_tooltip = {
		text = POD_assign_random_thorn_perk
		random_list = {
			# l1 - 20
			# l2 - 16
			# l3 - 12
			# l4 - 8
			# l5 - 6
			# l6 - 4
			# l7 - 2
			20 = { trigger = { NOT = { has_perk = spectre_prestige_perk } } add_perk = spectre_prestige_perk }
			20 = { trigger = { NOT = { has_perk = dark_allies_perk } } add_perk = dark_allies_perk }
			20 = { trigger = { NOT = { has_perk = tainted_relic_perk } } add_perk = tainted_relic_perk }
			20 = { trigger = { NOT = { has_perk = infamy_perk } } add_perk = infamy_perk }
			20 = { trigger = { NOT = { has_perk = deaths_sigil_perk } } add_perk = deaths_sigil_perk }
			16 = { trigger = { NOT = { has_perk = shadow_traits_perk } } add_perk = shadow_traits_perk }
			16 = { trigger = { NOT = { has_perk = nightmares_perk } } add_perk = nightmares_perk }
			16 = { trigger = { NOT = { has_perk = aura_of_corruption_perk } } add_perk = aura_of_corruption_perk }
			16 = { trigger = { NOT = { has_perk = mirror_mirror_perk } } add_perk = mirror_mirror_perk }
			16 = { trigger = { NOT = { has_perk = shadow_call_perk } } add_perk = shadow_call_perk }
			12 = { trigger = { NOT = { has_perk = pact_of_doom_perk } } add_perk = pact_of_doom_perk }
			12 = { trigger = { NOT = { has_perk = trick_of_the_light_perk } } add_perk = trick_of_the_light_perk }
			12 = { trigger = { NOT = { has_perk = bad_luck_perk } } add_perk = bad_luck_perk }
			12 = { trigger = { NOT = { has_perk = shadowed_face_perk } } add_perk = shadowed_face_perk }
			8 = { trigger = { NOT = { has_perk = honeyed_tongue_perk } } add_perk = honeyed_tongue_perk }
			8 = { trigger = { NOT = { has_perk = tainted_touch_perk } } add_perk = tainted_touch_perk }
			6 = { trigger = { NOT = { has_perk = thorn_shadowplay_perk } } add_perk = thorn_shadowplay_perk }
			6 = { trigger = { NOT = { has_perk = shadow_familiar_perk } } add_perk = shadow_familiar_perk }
			6 = { trigger = { NOT = { has_perk = freudian_slip_perk } } add_perk = freudian_slip_perk }
			6 = { trigger = { NOT = { has_perk = shadow_life_perk } } add_perk = shadow_life_perk }
			4 = { trigger = { NOT = { has_perk = thorn_whispers_perk } } add_perk = thorn_whispers_perk }
			4 = { trigger = { NOT = { has_perk = thorn_manifestation_perk } } add_perk = thorn_manifestation_perk }
			2 = { trigger = { NOT = { has_perk = devils_dare_perk } } add_perk = devils_dare_perk }
			2 = { trigger = { NOT = { has_perk = vampiric_nature_perk } } add_perk = vampiric_nature_perk }
		}
	}
}

POD_start_shadow = {
	add_trait = shadow
	if = { limit = { has_perk = spectre_prestige_perk } add_character_modifier = spectre_prestige_modifier }
	if = { limit = { has_perk = dark_allies_perk } add_character_modifier = dark_allies_modifier }
	if = { limit = { has_perk = infamy_perk } add_character_modifier = infamy_modifier }
	if = { limit = { has_perk = shadow_call_perk } add_character_modifier = shadow_call_modifier }
	if = { limit = { has_perk = shadowed_face_perk } add_character_modifier = shadowed_face_modifier }
}

POD_end_shadow = {
	remove_trait = shadow
	if = { limit = { has_character_modifier = spectre_prestige_modifier } remove_character_modifier = spectre_prestige_modifier }
	if = { limit = { has_character_modifier = dark_allies_modifier } remove_character_modifier = dark_allies_modifier }
	if = { limit = { has_character_modifier = infamy_modifier } remove_character_modifier = infamy_modifier }
	if = { limit = { has_character_modifier = shadow_call_modifier } remove_character_modifier = shadow_call_modifier }
	if = { limit = { has_character_modifier = shadowed_face_modifier } remove_character_modifier = shadowed_face_modifier }
}

POD_thorn_pulse = {
	if = { limit = { has_perk = deaths_sigil_perk } random = { chance = 25 add_character_modifier = { modifier = deaths_sigil_modifier years = { 2 3 } } } }
	if = { limit = { has_perk = nightmares_perk } random = { chance = 50 add_character_modifier = { modifier = nightmares_modifier years = { 2 3 } } } }
	if = { limit = { has_perk = aura_of_corruption_perk } random = { chance = 25 add_character_modifier = { modifier = aura_of_corruption_modifier years = { 2 3 } } } }
	if = { limit = { has_perk = mirror_mirror_perk } random = { chance = 25 add_character_modifier = { modifier = mirror_mirror_modifier years = 5 } } }
	if = { limit = { has_perk = trick_of_the_light_perk } random = { chance = 25 add_character_modifier = { modifier = trick_of_the_light_modifier years = 5 } } }
	if = { limit = { has_perk = bad_luck_perk } random = { chance = 30 add_character_modifier = { modifier = bad_luck_modifier years = { 2 3 } } } }
	if = { limit = { has_perk = tainted_touch_perk } random = { chance = 25 add_character_modifier = { modifier = tainted_touch_modifier years = 5 } } }
	if = { limit = { has_perk = freudian_slip_perk } random = { chance = 25 add_character_modifier = { modifier = freudian_slip_modifier years = 5 } } }
	if = { limit = { has_perk = thorn_manifestation_perk } random = { chance = 10 add_character_modifier = { modifier = thorn_manifestation_modifier years = 5 } } }
}

################## RISEN ##################
POD_become_risen_effecct = {
	if = {
		limit = { is_in_umbra_trigger = yes }
		remove_character_modifier = traveling_underworld_modifier
		remove_variable = spirit_location
	}
	add_trait_force_tooltip = risen
	POD_create_full_fetter = { TYPE = conduit LEVEL = 5 OBJECT = THIS }
}

POD_lose_risen_effect = {
	remove_trait = risen
	POD_remove_vampire_risen_discipline_traits_effect = yes
	POD_send_to_dark_kingdom_effect = yes
	hidden_effect = {
		POD_remove_conduit_modifiers_effect = yes
		POD_destroy_fetter = yes
	}
}

POD_conduit_initiation_effect = {
	random_list = {
		10 = {
			add_character_modifier = cat_conduit_modifier
		}
		10 = {
			add_character_modifier = dog_conduit_modifier
		}
		10 = {
			add_character_modifier = horse_conduit_modifier
		}
		10 = {
			add_character_modifier = wolf_conduit_modifier
		}
		10 = {
			add_character_modifier = bear_conduit_modifier
		}
		10 = {
			add_character_modifier = lion_conduit_modifier
		}
		10 = {
			add_character_modifier = tiger_conduit_modifier
		}
		10 = {
			add_character_modifier = rat_conduit_modifier
		}
		10 = {
			add_character_modifier = cockroach_conduit_modifier
		}
	}
}